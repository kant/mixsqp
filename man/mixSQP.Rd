% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixsqp.R
\name{mixsqp}
\alias{mixsqp}
\alias{mixsqp_control_default}
\title{Maximum-likelihood estimation of mixture proportions using SQP}
\usage{
mixsqp(L, w = rep(1, nrow(L)), x0 = rep(1, ncol(L)),
  control = list())

mixsqp_control_default()
}
\arguments{
\item{L}{Matrix specifying the optimization problem to be solved.
In the context of mixture-model fitting, \code{L[j,k]} should be
the value of the kth mixture component density at the jth data
point. \code{L} should be a numeric matrix with at least two
columns, with all entries being non-negative and finite (and not
missing). For large matrices, it is preferrable that the matrix is
stored in double-precision; see \code{\link{storage.mode}}.}

\item{w}{An optional numeric vector, with one entry for each row of
\code{L}, specifying the "weights" associated with the rows of
\code{L}. All weights must be finite, non-negative and not
missing. Internally, the weights are normalized to sum to 1,
which does not change the problem, but does change the value of the
objective function reported. By default, all weights are equal.}

\item{x0}{An optional numeric vector providing an initial estimate
of the solution to the optimization problem. It should contain only
finite, non-missing, non-negative values, and all entries of
\code{L \%*\% x0} must be greater than zero (to ensure that the
objective evaluates to a finite value at \code{x0}). The vector
will be normalized to sum to 1. By default, \code{x0} is the vector
with all equal values.}

\item{control}{A list of parameters controlling the behaviour of
the optimization algorithm. See \sQuote{Details}.}
}
\value{
A list object with the following elements:

\item{x}{The solution to the convex optimization problem.}

\item{value}{The value of the objective function, \eqn{f(x)}, at
\code{x}.}

\item{status}{A character string giving the status of the algorithm
upon termination.}

\item{progress}{A data frame containing more detailed information
about the algorithm's progress. The data frame has one row per SQP
iteration. For an explanation of the columns, see the description
of the \code{verbose} control paramter in \sQuote{Details}. Missing
values (\code{NA}'s) in the last row indicate that these quantities were
not computed because convergence was reached before computing
them. Also note that the storage of these quantities in the
\code{progress} data frame is slightly different than in the console
output (when \code{verbose = TRUE}) as the console output shows some
quantities that were computed after the convergence check in the
previous iteration.}
}
\description{
The \code{mixsqp} function uses a Sequential Quadratic
Programming (SQP) algorithm to find the maximum likelihood
estimates of mixture proportions in a (finite) mixture model. More
generally, \code{mixsqp} solves the corresponding constrained,
convex optimization problem, which is given below (see
\sQuote{Details}). See \sQuote{References} for more details about
the SQP algorithm.
}
\examples{
set.seed(1)
n <- 1e5
m <- 10
w <- rep(1,n)/n
L <- simulatemixdata(n,m)$L
out.mixsqp <- mixsqp(L,w)
f <- mixobjective(L,out.mixsqp$x,w)
print(f,digits = 16)

# We can also compare this result with solution found from an 
# interior-point approach called via the "KWDual" function from the 
# REBayes package. (This requires installation of the MOSEK 
# optimization library as well as the REBayes package, so we have
# made this step optional.)
\dontrun{ 
out.kwdual <- mixkwdual(L,w)
print(mixobjective(L,out.kwdual$x,w),digits = 16)
}
}
\references{
Y. Kim, P. Carbonetto, M. Stephens and M. Anitescu (2018). A fast
algorithm for maximum likelihood estimation of mixture proportions
using sequential quadratic programming. arXiv:1806.01412
\url{https://arxiv.org/abs/1806.01412}.
}
\seealso{
\code{mixobjective}, \code{mixkwdual}
}
